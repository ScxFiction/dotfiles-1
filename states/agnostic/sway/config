### Colours
# base16-oceanicnext
#
set $base00 #1B2B34
set $base01 #343D46
set $base02 #4F5B66
set $base03 #65737E
set $base04 #A7ADBA
set $base05 #C0C5CE
set $base06 #CDD3DE
set $base07 #D8DEE9
set $base08 #EC5f67
set $base09 #F99157
set $base0A #FAC863
set $base0B #99C794
set $base0C #5FB3B3
set $base0D #6699CC
set $base0E #C594C5
set $base0F #AB7967

client.focused          $base05 $base0D $base00 $base0D $base0D
client.focused_inactive $base01 $base01 $base05 $base03 $base01
client.unfocused        $base01 $base00 $base05 $base01 $base01
client.urgent           $base08 $base08 $base00 $base08 $base08
client.placeholder      $base00 $base00 $base05 $base00 $base00
client.background       $base07

# Modifier key: Mod1 - Alt, Mod4 - Super/Windows/Cmd
set $mod Mod4

# Editor
set $editor nvim

# Mouse
focus_follows_mouse no

# No window titles
new_window 1pixel

font pango:Roboto Mono 9
floating_modifier Mod4

# Keybindings
bindsym $mod+Return exec termite
bindsym $mod+l exec swaylock --color ab4642
bindsym $mod+q kill

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

bindsym $mod+h split h
bindsym $mod+v split v

bindsym $mod+f fullscreen
bindsym $mod+g fullscreen global

bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split


input DLL0704:01 06CB:76AE Touchpad {
  tap enabled
  natural_scroll enabled
  dwt enabled
}
input PS/2 Synaptics TouchPad {
  tap enabled
  natural_scroll enabled
  dwt enabled
}

bar {
  position top
 	font pango:Roboto Mono 9
	status_command i3blocks
  colors {
    background $base00
    separator  $base01
    statusline $base04

    # State             Border  BG      Text
    focused_workspace   $base05 $base0D $base00
    active_workspace    $base05 $base03 $base00
    inactive_workspace  $base03 $base01 $base05
    urgent_workspace    $base08 $base08 $base00
    binding_mode        $base00 $base0A $base00
  }
}

output DP-1 scale 1
output eDP-1 scale 2

output DP-1 pos 0,0 res 1920x1080
output DP-1 bg ~/Pictures/Mosaic.jpg stretch

output eDP-1 pos 320,1080 res 3200x1800
output eDP-1 bg ~/Pictures/Mosaic.jpg stretch

bindsym $mod+d exec dmenu_run -p "Run: " -l 10
bindsym $mod+space exec dmenu_run -p "Run: " -l 10

smart_borders on
gaps inner 5
gaps outer 0
new_window pixel 2
new_float pixel 2
hide_edge_borders both

workspace 1 output DP-1
workspace 2 output DP-1
workspace 3 output DP-1
workspace 4 output DP-1
workspace 5 output DP-1
workspace 6 output eDP-1
workspace 7 output eDP-1
workspace 8 output eDP-1
workspace 9 output eDP-1
workspace 10 output eDP-1

bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

bindsym $mod+Tab workspace back_and_forth

bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

bindsym $mod+Shift+space floating toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart
bindsym $mod+Shift+e exit
bindsym $mod+esc exit

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j           resize shrink width 10 px or 10 ppt
        bindsym k           resize grow height 10 px or 10 ppt
        bindsym l           resize shrink height 10 px or 10 ppt
        bindsym semicolon   resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 10 px or 10 ppt
        bindsym Down        resize grow height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Volume
bindsym XF86AudioRaiseVolume exec "amixer -q sset Master,0 5+ unmute"
bindsym XF86AudioLowerVolume exec "amixer -q sset Master,0 5- unmute"
